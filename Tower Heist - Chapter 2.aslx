<!--Saved by Quest 5.8.6836.13983-->
<asl version="580">
  <include ref="English.aslx" />
  <include ref="Core.aslx" />
  <game name="Tower Heist - Chapter 2">
    <gameid>700d2105-72e7-4984-b6f0-41193c52e574</gameid>
    <version>1.0</version>
    <firstpublished>2023</firstpublished>
    <gridmap />
    <respondtogridclicks />
    <object name="Magic Wand">
      <inherit name="editor_object" />
      <castspell type="script">
        if (game.pov.parent = Library) {
        }
        else {
          msg ("It didnt seem to do anything...")
        }
      </castspell>
    </object>
  </game>
  <object name="Entrance Hall">
    <inherit name="editor_room" />
    <isroom />
    <description><![CDATA[{img:CH2_RM1.png}<br/>The Entrance Hall is quite grand and well kept in spite of the run down exterior.]]></description>
    <descprefix>You are in</descprefix>
    <object name="player">
      <inherit name="editor_object" />
      <inherit name="editor_player" />
    </object>
    <exit alias="up" to="Upper Hallway">
      <inherit name="updirection" />
    </exit>
    <object name="Chair">
      <inherit name="editor_object" />
      <look>A decorative leather chair, looks sturdy enough to climb on.</look>
      <standon type="script">
        if (not GetBoolean(Chair, "moved")) {
          MakeObjectVisible (Odd Key)
          if (Got(Odd Key)) {
            msg ("You climb onto the chair but see nothing of note")
          }
          else {
            msg ("Upon clambering ontop of the chair, You can see an odd shaped key sitting atop the doorway.")
          }
        }
        else if (GetBoolean(Chair, "moved")) {
          if (Got(Odd Key)) {
            msg ("You see nothing odd")
          }
          else {
            AddToInventory (Odd Key)
            msg ("You climb up and see an odd key. You pick it up.")
            MakeObjectVisible (Odd Key)
          }
        }
      </standon>
      <move type="script">
        msg ("You move the chair.")
        if (not GetBoolean(Chair, "moved")) {
          SetObjectFlagOn (Chair, "moved")
        }
        else {
          SetObjectFlagOff (Chair, "moved")
        }
      </move>
      <feature_usegive />
      <useon type="scriptdictionary">
        <item key="Knife">
          if (Got(Leather Wrap)) {
            msg ("No need to mangle the chair more")
          }
          else {
            AddToInventory (Leather Wrap)
            MakeObjectVisible (Leather Wrap)
            msg ("You cut a strip of Leather from the chair. The Knife seems to dull to use more, so you drop it.")
            MakeObjectInvisible (Knife)
          }
        </item>
      </useon>
    </object>
    <object name="Odd Key">
      <inherit name="editor_object" />
      <take type="boolean">false</take>
      <visible type="boolean">false</visible>
      <takemsg>You cannot reach the key</takemsg>
      <feature_usegive />
      <use />
    </object>
    <object name="Leather Wrap">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
    </object>
  </object>
  <object name="Upper Hallway">
    <inherit name="editor_room" />
    <exit alias="down" to="Entrance Hall">
      <inherit name="downdirection" />
    </exit>
    <exit alias="northwest" to="Study">
      <inherit name="northwestdirection" />
    </exit>
    <exit name="libraryDoor" alias="northeast" to="Library">
      <inherit name="northeastdirection" />
      <locked />
      <visible />
    </exit>
    <exit alias="north" to="Dragon Room">
      <inherit name="northdirection" />
    </exit>
    <object name="Library Door Lock">
      <inherit name="editor_object" />
      <feature_usegive />
      <useon type="scriptdictionary">
        <item key="Odd Key">
          UnlockExit (libraryDoor)
          msg ("Library Door Unlocked")
          MakeObjectInvisible (Odd Key)
        </item>
      </useon>
    </object>
  </object>
  <object name="Study">
    <inherit name="editor_room" />
    <exit alias="southeast" to="Upper Hallway">
      <inherit name="southeastdirection" />
    </exit>
    <object name="Knife">
      <inherit name="editor_object" />
      <take />
      <feature_usegive />
      <use />
    </object>
    <object name="Chest">
      <inherit name="editor_object" />
      <inherit name="container_closed" />
      <inherit name="container_lockable" />
      <feature_container />
      <open type="boolean">false</open>
      <hidechildren type="boolean">false</hidechildren>
      <listchildren />
      <close type="boolean">false</close>
      <listchildrenprefix>It contains</listchildrenprefix>
      <autounlock type="boolean">false</autounlock>
      <unlockmessage type="string"></unlockmessage>
      <lockmessage type="string"></lockmessage>
      <object name="Hardwood Stick">
        <inherit name="editor_object" />
        <take />
      </object>
    </object>
  </object>
  <object name="Library">
    <inherit name="editor_room" />
    <enter type="script">
    </enter>
    <exit alias="southwest" to="Upper Hallway">
      <inherit name="southwestdirection" />
    </exit>
    <object name="Books">
      <inherit name="editor_object" />
      <take />
      <placebooks type="script">
        titles = NewStringDictionary()
        dictionary add (titles, "1", "Dusk Compendium - An Encyclopedia of Creatures in the Dark")
        dictionary add (titles, "2", "Dawn of the Dead - A Beginners Guide to Necromancy")
        dictionary add (titles, "3", "Midnight Stories - Tales to Frighten Travelers")
        set (Books, "titles", titles)
        ShowMenu ("What Book to Place First?", Books.titles, false) {
          set (Books, "book1", result)
          dictionary remove (Books.titles, Books.book1)
          ShowMenu ("What Book to Place Second?", Books.titles, false) {
            set (Books, "book2", result)
            dictionary remove (Books.titles, Books.book2)
            ShowMenu ("What Book to Place Last?", Books.titles, false) {
              set (Books, "book3", result)
              dictionary remove (Books.titles, Books.book3)
              if (Books.book1 = "2") {
                if (Books.book2 = "1") {
                  if (Books.book3 = "3") {
                    msg ("You hear a clunk in the study")
                    MakeObjectInvisible (Books)
                    HelperOpenObject (Chest)
                  }
                  else {
                    msg ("Nothing happened")
                  }
                }
                else {
                  msg ("Nothing happened")
                }
              }
              else {
                msg ("Nothing happened")
              }
            }
          }
        }
      </placebooks>
    </object>
    <object name="Book Case">
      <inherit name="editor_object" />
    </object>
  </object>
  <object name="Dragon Room">
    <inherit name="editor_room" />
    <enter type="script"><![CDATA[
      if (Dragon Room.loops < 5) {
        if (Dragon Room.loops = 0) {
          MakeObjectVisible (Necronomicon)
          set (Dragon Room, "loops", 1)
        }
        else if (Dragon Room.loops = 1) {
          MakeObjectVisible (Bag of Sand)
          set (Dragon Room, "loops", 2)
        }
        else if (Dragon Room.loops = 2) {
          MakeObjectVisible (Incense Stick)
          set (Dragon Room, "loops", 3)
        }
        else if (Dragon Room.loops = 3) {
          if (not GetBoolean(Dragon Room, "Solved")) {
            MakeObjectVisible (Coin)
          }
          set (Dragon Room, "loops", 0)
        }
      }
    ]]></enter>
    <beforefirstenter type="script">
    </beforefirstenter>
    <firstenter type="script">
      set (this, "loops", 0)
      LockExit (exitDragonRoom)
    </firstenter>
    <onexit type="script">
      if (not Got(Necronomicon)) {
        MakeObjectInvisible (Necronomicon)
      }
      if (not Got(Bag of Sand)) {
        MakeObjectInvisible (Bag of Sand)
      }
      if (not Got(Incense Stick)) {
        MakeObjectInvisible (Incense Stick)
      }
      if (not Got(Coin)) {
        MakeObjectInvisible (Coin)
      }
    </onexit>
    <exit name="exitDragonRoom" alias="south" to="Upper Hallway">
      <inherit name="southdirection" />
      <locked />
      <visible />
      <runscript />
      <script type="script">
        if (ListContains(ScopeVisible(), Necronomicon)) {
          MakeObjectInvisible (Necronomicon)
          msg ("The Necronomicon turned to dust as you exit the room. Must've been a fake.")
        }
        if (ListContains(ScopeVisible(), Bag of Sand)) {
          msg ("The bag of sand dissapears, was it even real?")
          MakeObjectInvisible (Bag of Sand)
        }
        if (ListContains(ScopeVisible(), Incense Stick)) {
          msg ("The Incense Stick Ignites as you leave, the dragon smirking as if an admission of guilt.")
          MakeObjectInvisible (Incense Stick)
        }
        MoveObject (player, Upper Hallway)
      </script>
    </exit>
    <object name="Necronomicon">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
      <take />
      <feature_usegive />
      <use />
    </object>
    <exit alias="northeast" to="Door to the Right">
      <inherit name="northeastdirection" />
    </exit>
    <exit alias="northwest" to="Door to the Left">
      <inherit name="northwestdirection" />
    </exit>
    <object name="Bag of Sand">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
      <take />
      <feature_usegive />
      <use />
    </object>
    <object name="Incense Stick">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
      <take />
      <feature_usegive />
      <use />
    </object>
    <object name="Coin">
      <inherit name="editor_object" />
      <take />
      <visible type="boolean">false</visible>
      <feature_usegive />
      <use />
    </object>
    <object name="Caged Small Red Dragon">
      <inherit name="editor_object" />
      <feature_usegive />
      <useon type="scriptdictionary">
        <item key="Necronomicon">
          msg ("You place the necronomicon in the cage with the dragon, who lets out a puff a flames, burning the necronomicon to dust. ")
          MakeObjectInvisible (Necronomicon)
          RemoveObject (Necronomicon)
        </item>
        <item key="Bag of Sand">
          msg ("You place the Bag of Sand in the dragons cage, who immediatly shreds the bag to taters, spreading sand everywhere.")
          MakeObjectInvisible (Bag of Sand)
          RemoveObject (Bag of Sand)
        </item>
        <item key="Incense Stick">
          msg ("As you bring the stick close to the dragon, it spurts out a small flame, igniting the incense stick. At least the room smells nice")
          MakeObjectInvisible (Incense Stick)
          RemoveObject (Incense Stick)
        </item>
        <item key="Coin">
          msg ("The dragon gratiously accepts this gift. It pushes a small gem from under itself out onto the table for you to take, and the exit door clunks as it unlocks.")
          MakeObjectVisible (Magic Gem)
          MakeObjectInvisible (Coin)
          SetObjectFlagOn (Dragon Room, "Solved")
          UnlockExit (exitDragonRoom)
          RemoveObject (Coin)
        </item>
      </useon>
    </object>
    <object name="Magic Gem">
      <inherit name="editor_object" />
      <visible type="boolean">false</visible>
      <take />
    </object>
  </object>
  <verb>
    <property>standon</property>
    <pattern>stand on</pattern>
    <defaultexpression>"You can't stand on " + object.article + "."</defaultexpression>
  </verb>
  <verb>
    <property>placebooks</property>
    <pattern>place books</pattern>
    <defaultexpression>"You can't place books " + object.article + "."</defaultexpression>
  </verb>
  <object name="Door to the Right">
    <inherit name="editor_room" />
    <enter type="script">
      MoveObject (player, Dragon Room)
    </enter>
    <descprefix>You enter the</descprefix>
    <attr name="grid_fill">Black</attr>
  </object>
  <object name="Door to the Left">
    <inherit name="editor_room" />
    <enter type="script">
      MoveObject (player, Dragon Room)
    </enter>
    <descprefix>You enter</descprefix>
    <attr name="grid_fill">Black</attr>
  </object>
  <verb>
    <property>castspell</property>
    <pattern>cast spell</pattern>
    <defaultexpression>"You can't cast spell " + object.article + "."</defaultexpression>
  </verb>
</asl>